{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/message.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nexport let MessageComponent = /*#__PURE__*/(() => {\n  class MessageComponent {\n    constructor(messageService, activatedRoute) {\n      this.messageService = messageService;\n      this.activatedRoute = activatedRoute;\n      this.userId = \"\";\n      this.messageDTO = {\n        message: \"\"\n      };\n      this.status = \"\";\n      this.isSuccessHidden = true;\n      this.isErrorHidden = true;\n    }\n\n    ngOnInit() {}\n\n    sendMessage() {\n      this.activatedRoute.params.subscribe(params => {\n        this.userId = params['userId'];\n      });\n      this.messageService.sendMessage(this.userId, this.messageDTO).subscribe(response => {\n        this.status = response.status;\n\n        if (this.status === 'Message sent.') {\n          this.isErrorHidden = true;\n          this.isSuccessHidden = false;\n          this.reloadWindow();\n          return;\n        }\n\n        this.isSuccessHidden = true;\n        this.isErrorHidden = false;\n        this.reloadWindow();\n      });\n    }\n\n    reloadWindow() {\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n    }\n\n  }\n\n  MessageComponent.ɵfac = function MessageComponent_Factory(t) {\n    return new (t || MessageComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  MessageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageComponent,\n    selectors: [[\"app-message\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"container\", \"flex\", \"justify-center\", \"self-center\", \"m-auto\", \"p-6\"], [1, \"m-5\", \"min-w-[600px]\"], [\"id\", \"success_message\", 1, \"success_message\", \"mb-2\", \"p-6\", \"bg-success\", \"rounded-lg\", \"shadow-md\", 3, \"ngClass\"], [1, \"text-medium\", \"text-primary\"], [\"id\", \"error_message\", 1, \"error_message\", \"mb-2\", \"p-6\", \"bg-error\", \"rounded-lg\", \"shadow-md\", 3, \"ngClass\"], [1, \"message_body\", \"flex\", \"flex-col\", \"justify-center\"], [\"for\", \"uid\", 1, \"w-full\", \"mt-1\", \"mb-1\", \"text-xl\", \"text-secondary\", \"font-bold\"], [\"rows\", \"25\", \"name\", \"uid\", \"placeholder\", \"Start typing...\", 1, \"flex\", \"jus\", \"w-full\", \"mt-1\", \"mb-1\", \"border-none\", \"ring-1\", \"ring-secondary\", \"rounded-lg\", \"shadow-sm\", \"focus:ring-1\", \"focus:ring-accent\", 3, \"ngModel\", \"ngModelChange\"], [1, \"send_button_container\", \"flex\", \"flex-row\", \"self-center\", \"justify-right\"], [1, \"send\", \"flex\", \"flex-end\", \"self-center\", \"justify-center\", \"w-full\", \"mt-3\", \"mb-3\", \"p-3\", \"text-xl\", \"bg-accent\", \"shadow-sm\", \"rounded-md\", \"text-secondary\", 3, \"click\"], [1, \"login_prompt\", \"flex\", \"self-center\", \"justify-center\", \"mt-8\"], [1, \"text-lg\", \"text-secondary\"], [\"routerLink\", \"/register\", 1, \"flex\", \"self-center\", \"justify-center\", \"w-full\", \"mt-3\", \"mb-3\", \"p-3\", \"text-xl\", \"bg-accent\", \"shadow-sm\", \"rounded-md\", \"text-secondary\"]],\n    template: function MessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"p\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"p\", 3);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Your message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"textarea\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function MessageComponent_Template_textarea_ngModelChange_11_listener($event) {\n          return ctx.messageDTO.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function MessageComponent_Template_button_click_13_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(14, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"h2\", 11);\n        i0.ɵɵtext(17, \"Want to join in?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵtext(19, \"Signup Now\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.isSuccessHidden ? \"hidden\" : \"display\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isErrorHidden ? \"hidden\" : \"display\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.status);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.messageDTO.message);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.NgClass, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.RouterLink],\n    styles: [\"\"]\n  });\n  return MessageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}